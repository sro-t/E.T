import os
import base64
import requests

def push_to_github(filename, content, commit_message):
    try:
        token = os.getenv("GITHUB_TOKEN")
        repo = os.getenv("GITHUB_REPO")
        branch = os.getenv("GITHUB_BRANCH", "main")
        author = os.getenv("GITHUB_COMMIT_AUTHOR", "GPT Bot <bot@example.com>")

        if not token or not repo:
            return False, "GitHub情報が不足しています。"

        headers = {
            "Authorization": f"Bearer {token}",
            "Accept": "application/vnd.github+json"
        }

        # ブランチの最新SHA取得
        ref_url = f"https://api.github.com/repos/{repo}/git/ref/heads/{branch}"
        ref_res = requests.get(ref_url, headers=headers).json()
        sha_latest = ref_res["object"]["sha"]

        # ブランチのHEADからbase treeを取得
        commit_url = f"https://api.github.com/repos/{repo}/git/commits/{sha_latest}"
        commit_res = requests.get(commit_url, headers=headers).json()
        base_tree = commit_res["tree"]["sha"]

        # blob（ファイル）作成
        blob_res = requests.post(
            f"https://api.github.com/repos/{repo}/git/blobs",
            headers=headers,
            json={"content": content, "encoding": "utf-8"}
        ).json()
        blob_sha = blob_res["sha"]

        # ツリー作成
        tree_res = requests.post(
            f"https://api.github.com/repos/{repo}/git/trees",
            headers=headers,
            json={"base_tree": base_tree, "tree": [{
                "path": filename,
                "mode": "100644",
                "type": "blob",
                "sha": blob_sha
            }]}
        ).json()
        new_tree_sha = tree_res["sha"]

        # コミット作成
        commit_res = requests.post(
            f"https://api.github.com/repos/{repo}/git/commits",
            headers=headers,
            json={
                "message": commit_message,
                "tree": new_tree_sha,
                "parents": [sha_latest],
                "author": {
                    "name": author.split("<")[0].strip(),
                    "email": author.split("<")[1].replace(">", "").strip()
                }
            }
        ).json()
        new_commit_sha = commit_res["sha"]

        # ブランチ更新（HEADを新コミットに）
        update_res = requests.patch(
            ref_url,
            headers=headers,
            json={"sha": new_commit_sha}
        )

        return update_res.status_code == 200, update_res.json()

    except Exception as e:
        return False, str(e)